name: "CI"

on:
  push:
    branches:
      - main
  pull_request:

env:
  DB_DATABASE: dwn
  DB_USER: root
  DB_PASSWORD: root

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "true"
          ref: ${{ github.event.pull_request.head.ref }}
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Set up MySQL
        run: |
          sudo systemctl start mysql
          mysqladmin -u$DB_USER -p$DB_PASSWORD password ''
          mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u$DB_USER
          nix develop -c nix run .#migrate

      - run: nix develop -c nix run .#prepare
      - uses: EndBug/add-and-commit@v9
        with:
          message: "chore: sqlx prepare"
          default_author: github_actions

      - run: nix develop -c cargo clippy --fix --no-deps
      - run: nix develop -c cargo fmt --all
      - run: nix develop -c prettier -w .
      - uses: EndBug/add-and-commit@v9
        with:
          message: "chore: lint"
          default_author: github_actions
      - run: echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

  check:
    needs:
      - lint
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_DATABASE: dwn
          MYSQL_USER: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: AdityaGarg8/remove-unwanted-software@v2
        with:
          remove-android: "true"
          remove-codeql: "true"
          remove-docker-images: "true"
          remove-dotnet: "true"
          remove-haskell: "true"
      - uses: actions/checkout@v4
        with:
          submodules: "true"
          ref: ${{ needs.lint.outputs.sha }}
      - uses: DeterminateSystems/flake-checker-action@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: Swatinem/rust-cache@v2

      - name: Set up MySQL
        run: |
          nix develop -c nix run .#migrate
          nix develop -c sqlx database create

      - run: nix develop -c cargo doc --workspace --all-features --no-deps
      - run: nix develop -c cargo test --workspace --all-features --all-targets
